"use strict";(self.webpackChunkzi_wiki_pages=self.webpackChunkzi_wiki_pages||[]).push([[7820],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return h}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),h=i,m=d["".concat(o,".").concat(h)]||d[h]||c[h]||r;return n?a.createElement(m,l(l({ref:t},u),{},{components:n})):a.createElement(m,l({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:i,l[1]=s;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2584:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),l=["components"],s={id:"useage",title:"Usage",sidebar_position:3,image:"/img/z-shell_501x501.png",description:"Usage examples for Z-Shell ZI",keywords:["usage","zsh","z-shell","zi"]},o=void 0,p={unversionedId:"getting_started/useage",id:"getting_started/useage",title:"Usage",description:"Usage examples for Z-Shell ZI",source:"@site/i18n/ja/docusaurus-plugin-content-docs/current/getting_started/03_usage.md",sourceDirName:"getting_started",slug:"/getting_started/useage",permalink:"/ja/docs/getting_started/useage",editUrl:"https://github.com/z-shell/zw/tree/main/i18n/ja/docusaurus-plugin-content-docs/current/getting_started/03_usage.md",tags:[],version:"current",lastUpdatedBy:"Salvydas Lukosius",lastUpdatedAt:1642322710,formattedLastUpdatedAt:"2022/1/16",sidebarPosition:3,frontMatter:{id:"useage",title:"Usage",sidebar_position:3,image:"/img/z-shell_501x501.png",description:"Usage examples for Z-Shell ZI",keywords:["usage","zsh","z-shell","zi"]},sidebar:"tutorialSidebar",previous:{title:"Quick overview",permalink:"/ja/docs/getting_started/overview"},next:{title:"Migration",permalink:"/ja/docs/getting_started/migration"}},u=[{value:"Plugins and snippets",id:"plugins-and-snippets",children:[{value:"Basic example",id:"basic-example",children:[],level:3},{value:"Prompts use-case example",id:"prompts-use-case-example",children:[],level:3}],level:2},{value:"Upgrade ZI and plugins",id:"upgrade-zi-and-plugins",children:[],level:2},{value:"Turbo and lucid",id:"turbo-and-lucid",children:[{value:"Turbo Mode",id:"turbo-mode",children:[],level:3},{value:"Lucid",id:"lucid",children:[],level:3}],level:2},{value:"More Examples",id:"more-examples",children:[],level:2}],c={toc:u};function d(e){var t=e.components,n=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"plugins-and-snippets"},"Plugins and snippets"),(0,r.kt)("p",null,"Plugins can be loaded using ",(0,r.kt)("inlineCode",{parentName:"p"},"load")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"light"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"zi load  <repo/plugin> # Load with reporting/investigating.\nzi light <repo/plugin> # Load without reporting/investigating.\n")),(0,r.kt)("p",null,"If you want to source local or remote files (using direct URL), you can do so with ",(0,r.kt)("inlineCode",{parentName:"p"},"snippet"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"zi snippet <URL>\n")),(0,r.kt)("p",null,"Such lines should be added to ",(0,r.kt)("inlineCode",{parentName:"p"},".zshrc"),". Snippets are cached locally, use ",(0,r.kt)("inlineCode",{parentName:"p"},"-f")," option to download a fresh version of a snippet, or ",(0,r.kt)("inlineCode",{parentName:"p"},"zi update {URL}"),". Can also use ",(0,r.kt)("inlineCode",{parentName:"p"},"zi update --all")," to update all snippets (and plugins)."),(0,r.kt)("h3",{id:"basic-example"},"Basic example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"# Plugin history-search-multi-word loaded with investigating.\nzi load z-shell/H-S-MW\n\n# Two regular plugins loaded without investigating.\nzi light zsh-users/zsh-autosuggestions\nzi light z-shell/F-Sy-H\n\n# Snippet\nzi snippet https://gist.githubusercontent.com/hightemp/5071909/raw/\n")),(0,r.kt)("h3",{id:"prompts-use-case-example"},"Prompts use-case example"),(0,r.kt)("p",null,"This is ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/romkatv/powerlevel10k"},"powerlevel10k"),", ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/sindresorhus/pure"},"pure"),", ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/starship/starship"},"starship")," sample:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'# Load powerlevel10k theme\nzi ice depth"1" # git clone depth\nzi light romkatv/powerlevel10k\n\n# Load pure theme\nzi ice pick"async.zsh" src"pure.zsh" # with the zsh-async library that\'s bundled with it.\nzi light sindresorhus/pure\n\n# Load starship theme\nzi ice as"command" from"gh-r" \\ # `starship` binary as command, from github release\n  atclone"./starship init zsh > init.zsh; ./starship completions zsh > _starship" \\ # starship setup at clone(create init.zsh, completion)\n  atpull"%atclone" src"init.zsh" # pull behavior same as clone, source init.zsh\nzi light starship/starship\n')),(0,r.kt)("h2",{id:"upgrade-zi-and-plugins"},"Upgrade ZI and plugins"),(0,r.kt)("p",null,"ZI can be updated to ",(0,r.kt)("inlineCode",{parentName:"p"},"self-update")," and plugins to ",(0,r.kt)("inlineCode",{parentName:"p"},"update"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"# Self-update\nzi self-update\n# Plugin update\nzi update\n# Plugin parallel update\nzi update --parallel\n# Increase the number of jobs in a concurrent set to 40\nzi update --parallel 40\n")),(0,r.kt)("h2",{id:"turbo-and-lucid"},"Turbo and lucid"),(0,r.kt)("p",null,"Turbo and lucid are the most used options."),(0,r.kt)("h3",{id:"turbo-mode"},"Turbo Mode"),(0,r.kt)("p",null,"Turbo mode is the key to performance. It can be loaded asynchronously, which makes a huge difference when the amount of plugins increases."),(0,r.kt)("p",null,"Usually used as ",(0,r.kt)("inlineCode",{parentName:"p"},'zi ice wait"<SECONDS>"'),", let's use the previous example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'zi ice wait    # wait is same wait"0"\nzi load z-shell/history-search-multi-word\n\nzi ice wait"2" # load after 2 seconds\nzi load z-shell/history-search-multi-word\n\nzi ice wait    # also be used in `light` and `snippet`\nzi snippet https://gist.githubusercontent.com/hightemp/5071909/raw/\n')),(0,r.kt)("h3",{id:"lucid"},"Lucid"),(0,r.kt)("p",null,"Turbo mode is verbose, so you need an option for quiet."),(0,r.kt)("p",null,"You can use with ",(0,r.kt)("inlineCode",{parentName:"p"},"lucid"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"zi ice wait lucid\nzi load z-shell/history-search-multi-word\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"F&A:"))," What is ",(0,r.kt)("inlineCode",{parentName:"p"},"ice"),"?"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ice")," is Zi's options command. The option melts like ice and is used only once. (more: ",(0,r.kt)("a",{parentName:"p",href:"../guides/ice-modifiers"},"Ice Modifiers"),")."),(0,r.kt)("h2",{id:"more-examples"},"More Examples"),(0,r.kt)("p",null,"After installing ZI you can start adding some actions (load some plugins) to ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.zshrc"),", at the bottom. Some examples:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'# Load the pure theme, with the zsh-async library that\'s bundled with it.\nzi ice pick"async.zsh" src"pure.zsh"\nzi light sindresorhus/pure\n\n# A glance at the new for-syntax \u2013 load all of the above\n# plugins with a single command. For more information see:\n# https://github.com/z-shell/zi/wiki/Syntax/\nzi light-mode for \\\n  zsh-users/zsh-autosuggestions \\\n  z-shell/F-Sy-H \\\n  z-shell/H-S-MW \\\n  pick"async.zsh" src"pure.zsh" \\\n    sindresorhus/pure\n\n# Binary release in the archive, from GitHub-releases page.\n# After automatic unpacking it provides program "fzf".\nzi ice from"gh-r" as"program"\nzi light junegunn/fzf\n\n# One other binary release, needs renaming from `docker-compose-Linux-x86_64`.\n# This is done by ice-mod `mv\'{from} -> {to}\'. There are multiple packages per\n# single version, for OS X, Linux, and Windows \u2013 so ice-mod `bpick\' is used to\n# select Linux package \u2013 in this case, this is not needed, ZI will\n# grep operating system name and architecture automatically when there\'s no `bpick\'.\nzi ice from"gh-r" as"program" mv"docker* -> docker-compose" bpick"*linux*"\nzi load docker/compose\n\n# Vim repository on GitHub \u2013 a typical source code that needs compilation \u2013 ZI\n# can manage it for you if you like, run `./configure` and other `make`, etc. stuff.\n# Ice-mod `pick` selects a binary program to add to $PATH. You could also install the\n# package under the path $ZPFX, see: https://github.com/z-shell/zi/wiki/Compiling-programs\nzi ice as"program" atclone"rm -f src/auto/config.cache; ./configure" \\\n  atpull"%atclone" make pick"src/vim"\nzi light vim/vim\n\n# Scripts that are built at install (there\'s single default make target, "install",\n# and it constructs scripts by `cat\'ing a few files). The make\'\' ice could also be:\n# `make"install PREFIX=$ZPFX"`, if "install" wouldn\'t be the only, default target.\nzi ice as"program" pick"$ZPFX/bin/git-*" make"PREFIX=$ZPFX"\nzi light tj/git-extras\n\n# Handle completions without loading any plugin, see "clist" command.\n# This one is to be run just once, in an interactive session.\nzi creinstall %HOME/my_completions\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"# For GNU ls (the binaries can be gls, gdircolors, e.g. on OS X when installing the\n# coreutils package from Homebrew; you can also use https://github.com/ogham/exa)\nzi ice atclone\"dircolors -b LS_COLORS > c.zsh\" atpull'%atclone' pick\"c.zsh\" nocompile'!'\nzi light trapd00r/LS_COLORS\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"# make'!...' -> run make before atclone & atpull\nzi ice as\"program\" make'!' atclone'./direnv hook zsh > zhook.zsh' atpull'%atclone' src\"zhook.zsh\"\nzi light direnv/direnv\n")),(0,r.kt)("p",null,"If you're interested in more examples then check out the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/z-shell/playground"},"playground repository")," where users have uploaded their ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.zshrc")," and ZI configurations. Feel free to ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/z-shell/playground/issues/new?template=request-to-add-zshrc-to-the-zi-configs-repo.md"},"submit")," your ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.zshrc")," there if it contains ZI commands."),(0,r.kt)("p",null,"For some additional examples you can also check out the:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"../gallery/collection"},"Collection"),","),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"../gallery/collection#oh-my-zsh"},"Oh-My-Zsh"),".")))}d.isMDXComponent=!0}}]);