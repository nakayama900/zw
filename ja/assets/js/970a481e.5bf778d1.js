"use strict";(self.webpackChunkzi_wiki_pages=self.webpackChunkzi_wiki_pages||[]).push([[8301],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return c}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=p(n),c=i,u=m["".concat(o,".").concat(c)]||m[c]||h[c]||l;return n?a.createElement(u,r(r({ref:t},d),{},{components:n})):a.createElement(u,r({ref:t},d))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var p=2;p<l;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4760:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return p},toc:function(){return d},default:function(){return m}});var a=n(7462),i=n(3366),l=(n(7294),n(3905)),r=["components"],s={id:"syntax",title:"\u270d\ufe0f Syntax",description:"Syntax documentation for ZI",image:"/img/logo/501x501.png",keywords:["syntax","zsh","z-shell","zi"]},o=void 0,p={unversionedId:"guides/syntax",id:"guides/syntax",title:"\u270d\ufe0f Syntax",description:"Syntax documentation for ZI",source:"@site/i18n/ja/docusaurus-plugin-content-docs/current/guides/01_syntax.md",sourceDirName:"guides",slug:"/guides/syntax",permalink:"/ja/docs/guides/syntax",editUrl:"https://github.com/z-shell/zw/tree/main/i18n/ja/docusaurus-plugin-content-docs/current/guides/01_syntax.md",tags:[],version:"current",lastUpdatedBy:"Salvydas Lukosius",lastUpdatedAt:1642322710,formattedLastUpdatedAt:"2022/1/16",sidebarPosition:1,frontMatter:{id:"syntax",title:"\u270d\ufe0f Syntax",description:"Syntax documentation for ZI",image:"/img/logo/501x501.png",keywords:["syntax","zsh","z-shell","zi"]},sidebar:"tutorialSidebar",previous:{title:"Migration",permalink:"/ja/docs/getting_started/migration"},next:{title:"\ud83e\uddca Ice Syntax",permalink:"/ja/docs/guides/ice"}},d=[{value:"The fundamental syntax",id:"the-fundamental-syntax",children:[],level:2},{value:"The <code>for</code> syntax",id:"the-for-syntax",children:[{value:"Use cases of <code>for</code> syntax",id:"use-cases-of-for-syntax",children:[],level:3}],level:2},{value:"The <code>make&#39;\u2026&#39;</code> syntax",id:"the-make-syntax",children:[],level:2},{value:"The <code>bindmap&#39;\u2026&#39;</code> keybindings",id:"the-bindmap-keybindings",children:[{value:"Examples of <code>bindmap&#39;\u2026&#39;</code>",id:"examples-of-bindmap",children:[],level:3},{value:"Explanation",id:"explanation",children:[],level:3},{value:"Using <code>bindmap&#39;\u2026&#39;</code> In Light Mode",id:"using-bindmap-in-light-mode",children:[],level:3},{value:"Using The <code>UPAR</code>, Etc. Shorthands",id:"using-the-upar-etc-shorthands",children:[],level:3}],level:2}],h={toc:d};function m(e){var t=e.components,n=(0,i.Z)(e,r);return(0,l.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"the-fundamental-syntax"},"The fundamental syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"zi ice \u2026\u2026\nzi load \u2026\u2026\nzi light \u2026\u2026\nzi snippet \u2026\u2026\n")),(0,l.kt)("h2",{id:"the-for-syntax"},"The ",(0,l.kt)("inlineCode",{parentName:"h2"},"for")," syntax"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"for")," ",(0,l.kt)("a",{parentName:"p",href:"https://z-shell.pages.dev/search/?q=syntax"},"syntax")," is a more concise and more optimized. It is best presented by a real-world example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'zi as"null" wait"3" lucid for \\\n  sbin Fakerr/git-recall \\\n  sbin paulirish/git-open \\\n  sbin paulirish/git-recent \\\n  sbin davidosomething/git-my \\\n  make"PREFIX=$ZPFX install" iwata/git-now \\\n  make"PREFIX=$ZPFX" tj/git-extras\n')),(0,l.kt)("p",null,"Above single command installs 6 plugins (",(0,l.kt)("a",{parentName:"p",href:"https://z-shell.pages.dev/search/?q=git+ext"},"git extension")," packages), with the base ices ",(0,l.kt)("inlineCode",{parentName:"p"},'as"null" wait"3" lucid')," that are common to all of the plugins and 6 plugin-specific add-on ices."),(0,l.kt)("h3",{id:"use-cases-of-for-syntax"},"Use cases of ",(0,l.kt)("inlineCode",{parentName:"h3"},"for")," syntax"),(0,l.kt)("p",null,"Load a few useful binary (i.e.: ",(0,l.kt)("a",{parentName:"p",href:"https://z-shell.pages.dev/search/?q=GH-R"},"binary packages from the GitHub Releases"),") utils:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'zi as"null" wait"2" lucid from"gh-r" for \\\n  mv"exa* -> exa" sbin ogham/exa \\\n  mv"fd* -> fd" sbin"fd/fd" @sharkdp/fd \\\n  sbin"fzf" junegunn/fzf\n')),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("ul",{parentName:"div"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"sbin'\u2026'")," is an ",(0,l.kt)("a",{parentName:"p",href:"https://z-shell.pages.dev/search/?q=ice"},"ice")," added by the ",(0,l.kt)("a",{parentName:"p",href:"https://z-shell.pages.dev/search/?q=bin+gem+node"},"z-a-bin-gem-node")," ",(0,l.kt)("a",{parentName:"p",href:"https://z-shell.pages.dev/search/?q=annex"},"annex"),", it provides the command to the command line without altering ",(0,l.kt)("inlineCode",{parentName:"p"},"$PATH"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If the name of the command is the same as the name of the plugin, the ice contents can be skipped."))))),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://z-shell.pages.dev/search/?q=turbo+mode"},"Turbo")," load some plugins, without any plugin-specific ices:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"zi wait lucid for \\\n  hlissner/zsh-autopair \\\n  urbainvaes/fzf-marks\n")),(0,l.kt)("p",null,"Load two ",(0,l.kt)("a",{parentName:"p",href:"https://z-shell.pages.dev/search/?q=oh+my+zsh"},"Oh My Zsh")," files as ",(0,l.kt)("a",{parentName:"p",href:"https://z-shell.pages.dev/search/?q=snippets"},"snippets"),", in Turbo:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'zi wait lucid for \\\n  OMZ::lib/git.zsh \\\n  atload"unalias grv" OMZ::plugins/git/git.plugin.zsh\n')),(0,l.kt)("h2",{id:"the-make-syntax"},"The ",(0,l.kt)("inlineCode",{parentName:"h2"},"make'\u2026'")," syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'zi ice as"program" pick"$ZPFX/bin/git-*" make"PREFIX=$ZPFX"\nzi light tj/git-extras\n')),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Makefile")," of the project above has only 2 tasks:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Install the target."),(0,l.kt)("li",{parentName:"ol"},"Build scripts that is required for installation.")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Makefile")," with 2 tasks, can use:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},'make"all install PREFIX=\u2026"'),","),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"pick'\u2026'")," will ",(0,l.kt)("inlineCode",{parentName:"li"},"chmod +x")," all matching files and add ",(0,l.kt)("inlineCode",{parentName:"li"},"$ZPFX/bin/")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"$PATH"),".")),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},(0,l.kt)("inlineCode",{parentName:"p"},"$ZPFX")," is provided by ZI, it is set to ",(0,l.kt)("inlineCode",{parentName:"p"},"~/.zi/polaris")," by default. However it can changed by specifying custom ",(0,l.kt)("inlineCode",{parentName:"p"},"$ZPFX=")," target if required."),(0,l.kt)("p",{parentName:"div"},"More information: ",(0,l.kt)("a",{parentName:"p",href:"/docs/guides/customization"},"guides/customization")))),(0,l.kt)("h2",{id:"the-bindmap-keybindings"},"The ",(0,l.kt)("inlineCode",{parentName:"h2"},"bindmap'\u2026'")," keybindings"),(0,l.kt)("p",null,"Sometimes plugins call ",(0,l.kt)("a",{parentName:"p",href:"https://z-shell.pages.dev/search/?q=binkey"},"bindkey")," to assign keyboard shortucts. This can cause problems, because multiple plugins can bind the same keys. Also, the user might want a different binding(s), which will require a complicated, additional ",(0,l.kt)("inlineCode",{parentName:"p"},"bindkey")," commands in ",(0,l.kt)("inlineCode",{parentName:"p"},".zshrc"),"."),(0,l.kt)("p",null,"ZI provides a solution to this problem \u2013 the ability to remap the bindkeys with a short ",(0,l.kt)("a",{parentName:"p",href:"https://z-shell.pages.dev/search/?q=ice+modifier"},"ice-modifier")," specification with the ",(0,l.kt)("inlineCode",{parentName:"p"},"bindmap'\u2026'")," ",(0,l.kt)("a",{parentName:"p",href:"/docs/guides/ice"},"ice"),"."),(0,l.kt)("h3",{id:"examples-of-bindmap"},"Examples of ",(0,l.kt)("inlineCode",{parentName:"h3"},"bindmap'\u2026'")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"# Map Ctrl-G instead of Ctrl-R for the history searcher.\nzi bindmap'^R -> ^G' for z-shell/history-search-multi-word\n\n# Map Ctrl-Shift-Left and \u2026-Right used by URxvt instead of the Xterms' ones.\n#\n# Load with the bindkey-tracking \u2194 with light-loading for anything else.\n#\n# Could also separate the bindmaps with a semicolon, i.e.:\n# bindmap'\"\\\\e[1\\;6D\" -> \\\\e[1\\;5D ; \"\\\\e[1\\;6C\" -> ^[[1\\;5C' \\\nzi wait light-mode trackbinds bindmap'\"\\\\e[1\\;6D\" -> \\\\e[1\\;5D\"' \\\n  bindmap'\"\\\\e[1\\;6C\" -> ^[[1\\;5C' pick'dircycle.zsh' for \\\n  michaelxmcbride/zsh-dircycle\n\n# Map space to regular space and Ctrl-Space to the `globalias' widget, which\n# expands the alias entered on the left (provided by OMZ globalias plugin).\nzi bindmap='!\" \" -> magic-space; !\"^ \" -> globalias' nocompletions \\\n  depth=1 pick=plugins/globalias/globalias.plugin.zsh for \\\n  ohmyzsh/ohmyzsh\n")),(0,l.kt)("h3",{id:"explanation"},"Explanation"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"bindmap'\u2026'")," ice has two modes of operation: normal and exclamation-mark (",(0,l.kt)("inlineCode",{parentName:"p"},"bindmap'!\u2026'"),"). In the first mode, the remapping is beind done from-key to-key, i.e.: ",(0,l.kt)("inlineCode",{parentName:"p"},"bindmap'fromkey -> to-key'"),". The given key is being changed to the second given key in the ",(0,l.kt)("inlineCode",{parentName:"p"},"bindkey")," command that's being actually issued when loading the plugin."),(0,l.kt)("p",null,"In the second mode, the remapping is being done from-key to-widget, e.g: ",(0,l.kt)("inlineCode",{parentName:"p"},"bindmap'!from-key -> to-widget'"),". In this mode, the given key is being mapped to the given widget instead of the widget specified in the ",(0,l.kt)("inlineCode",{parentName:"p"},"bindkey")," command,"),(0,l.kt)("p",null,"i.e.: instead of:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'bindkey "^ " magic-space\nbindkey " " globalias\n')),(0,l.kt)("p",null,"the actual call that'll be done will be:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},'bindkey "^ " globalias\nbindkey " " magic-space\n')),(0,l.kt)("p",null,"(for the ",(0,l.kt)("inlineCode",{parentName:"p"},'bindmap=\'!" " -> magic-space; !"^ " -> globalias\'')," ice)."),(0,l.kt)("h3",{id:"using-bindmap-in-light-mode"},"Using ",(0,l.kt)("inlineCode",{parentName:"h3"},"bindmap'\u2026'")," In Light Mode"),(0,l.kt)("p",null,"When the investigation mode is on \u2013 i.e.: when the full loading mode is being used (default in the ",(0,l.kt)("inlineCode",{parentName:"p"},"for")," syntax and when ",(0,l.kt)("inlineCode",{parentName:"p"},"zi load \u2026")," is used) \u2013 then the ",(0,l.kt)("inlineCode",{parentName:"p"},"bindmap'\u2026'")," ice works normally. In the non-investigation, i.e.: the ",(0,l.kt)("a",{parentName:"p",href:"https://z-shell.pages.dev/search/?q=light+mode"},"light mode")," \u2013 activated when ",(0,l.kt)("inlineCode",{parentName:"p"},"zi light \u2026\u2026")," or the ",(0,l.kt)("inlineCode",{parentName:"p"},"light-mode")," ice is being used \u2013 the ",(0,l.kt)("inlineCode",{parentName:"p"},"bindmap'\u2026'")," is unavailable, unless the ",(0,l.kt)("inlineCode",{parentName:"p"},"trackbinds")," ice is specified, i.e.:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"# With use of the light-mode ice and the for-syntax:\nzi light-mode trackbinds bindmap'^R -> ^G' for z-shell/history-search-multi-word\n\n# With use of the classic syntax:\nzi trackbinds bindmap'^R -> ^G' for z-shell/history-search-multi-word\nzi light z-shell/history-search-multi-word\n")),(0,l.kt)("h3",{id:"using-the-upar-etc-shorthands"},"Using The ",(0,l.kt)("inlineCode",{parentName:"h3"},"UPAR"),", Etc. Shorthands"),(0,l.kt)("p",null,"There are four special values that can be used on the left side of the bind-map: ",(0,l.kt)("inlineCode",{parentName:"p"},"UPAR"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"DOWNAR"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"LEFTAR"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"RIGHTAR"),". They'll match up arrow, down arrow, etc. So that it's possible to do:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"zi bindmap='LEFTAR -> ^F; RIGHTAR -> ^G' \u2026\n")),(0,l.kt)("p",null,"The benefits of using the ",(0,l.kt)("inlineCode",{parentName:"p"},"UPAR"),", \u2026 shorthands is that they cover multiple possible cursor-key codes for each of the cursor key, so that they'll work regardless of the terminal being used."))}m.isMDXComponent=!0}}]);