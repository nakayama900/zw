"use strict";(self.webpackChunkzi_wiki_pages=self.webpackChunkzi_wiki_pages||[]).push([[5463],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=i.createContext({}),u=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return i.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),f=r,m=d["".concat(o,".").concat(f)]||d[f]||p[f]||a;return n?i.createElement(m,l(l({ref:t},c),{},{components:n})):i.createElement(m,l({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var u=2;u<a;u++)l[u]=n[u];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7871:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var i=n(7462),r=n(3366),a=(n(7294),n(3905)),l=["components"],s={id:"startify",title:"\u2699\ufe0f Startify",image:"/img/z-shell_501x501.png",description:"Zsh Plugin Startify documentation",keywords:["startify","plugin","zsh","z-shell","zi"]},o=void 0,u={unversionedId:"ecosystem/plugins/startify",id:"ecosystem/plugins/startify",title:"\u2699\ufe0f Startify",description:"Zsh Plugin Startify documentation",source:"@site/i18n/ja/docusaurus-plugin-content-docs/current/ecosystem/plugins/02_startify.md",sourceDirName:"ecosystem/plugins",slug:"/ecosystem/plugins/startify",permalink:"/ja/docs/ecosystem/plugins/startify",editUrl:"https://github.com/z-shell/zw/tree/main/i18n/ja/docusaurus-plugin-content-docs/current/ecosystem/plugins/02_startify.md",tags:[],version:"current",lastUpdatedBy:"Salvydas Lukosius",lastUpdatedAt:1642376565,formattedLastUpdatedAt:"2022/1/16",sidebarPosition:2,frontMatter:{id:"startify",title:"\u2699\ufe0f Startify",image:"/img/z-shell_501x501.png",description:"Zsh Plugin Startify documentation",keywords:["startify","plugin","zsh","z-shell","zi"]},sidebar:"tutorialSidebar",previous:{title:"\u2699\ufe0f ZConvey",permalink:"/ja/docs/ecosystem/plugins/zconvey"},next:{title:"\u2699\ufe0f Modules",permalink:"/ja/docs/ecosystem/plugins/modules"}},c=[{value:"Zsh Startify overview",id:"zsh-startify-overview",children:[],level:2},{value:"Quick Start",id:"quick-start",children:[],level:2},{value:"Zstyles for Startify",id:"zstyles-for-startify",children:[],level:2},{value:"Startify installation with ZI",id:"startify-installation-with-zi",children:[],level:2},{value:"Other Startify installations",id:"other-startify-installations",children:[],level:2}],p={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"A plugin that aims at providing what ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/mhinz/vim-startify"},"vim-startify")," plugin does, but in Zsh. The analogy isn't fully easy to make. ",(0,a.kt)("inlineCode",{parentName:"p"},"vim-startify")," states - it provides dynamically created headers or footers and uses configurable lists to show recently used or bookmarked files and persistent sessions."),(0,a.kt)("h2",{id:"zsh-startify-overview"},"Zsh Startify overview"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Shows recently used files if used by a shell-util command, with name of the command(s) on other right"),(0,a.kt)("li",{parentName:"ul"},"Shows recently used vim files"),(0,a.kt)("li",{parentName:"ul"},"Show active tmux sessions"),(0,a.kt)("li",{parentName:"ul"},"Show statistics of most popular aliases in use"),(0,a.kt)("li",{parentName:"ul"},"Show recently visited projects e.g: ",(0,a.kt)("inlineCode",{parentName:"li"},"git")," repositories, and directories with:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Makefile"),","),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"CMakeLists.txt"),","),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"configure")," script."))),(0,a.kt)("li",{parentName:"ul"},"Very advanced feature, inherited from ",(0,a.kt)("inlineCode",{parentName:"li"},"zsh-startify"),"'s predecessor: ",(0,a.kt)("inlineCode",{parentName:"li"},"z-shell/zaccumulator")," plugin"),(0,a.kt)("li",{parentName:"ul"},"Show recently ran ",(0,a.kt)("inlineCode",{parentName:"li"},"git")," commands, with analysis of e.g. recently checked-out branches"),(0,a.kt)("li",{parentName:"ul"},"Can cooperate with any bookmarking plugins to show their bookmarks")),(0,a.kt)("h2",{id:"quick-start"},"Quick Start"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"zsh-startify")," accumulates data in its own history file. To pre-fill it quickly with a few of entries (basing on the regular history) you can run the ",(0,a.kt)("inlineCode",{parentName:"p"},"__from-zhistory-accumulate")," command."),(0,a.kt)("h2",{id:"zstyles-for-startify"},(0,a.kt)("a",{parentName:"h2",href:"/ja/search?q=zstyle"},"Zstyles")," for Startify"),(0,a.kt)("p",null,"The zstyles used to configure the plugin (add such commands anywhere in the ",(0,a.kt)("inlineCode",{parentName:"p"},"zshrc"),"):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'zstyle ":plugin:zsh-startify:shellutils" size 5  # The size of the recently used file list (default: 5)\nzstyle ":plugin:zsh-startify:vim" size 5         # The size of the recently opened in Vim list (default: 5)\n')),(0,a.kt)("h2",{id:"startify-installation-with-zi"},"Startify installation with ZI"),(0,a.kt)("p",null,"Option A \u2013 normal load without ",(0,a.kt)("a",{parentName:"p",href:"/search?q=turbo+mode"},"turbo mode"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"zi ice atload'zsh-startify'\nzi load z-shell/zsh-startify\n")),(0,a.kt)("p",null,"Option B \u2013 a load with ",(0,a.kt)("a",{parentName:"p",href:"/search?q=turbo+mode"},"turbo mode"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"zi ice wait'0' lucid atload'zsh-startify'\nzi load z-shell/zsh-startify\n")),(0,a.kt)("p",null,"The first option (A) loads the plugin synchronously, at the time of execution of the ",(0,a.kt)("inlineCode",{parentName:"p"},"zi load ...")," command. The second option (B) loads in an asynchronous manner, 0 seconds after the prompt being first displayed."),(0,a.kt)("h2",{id:"other-startify-installations"},"Other Startify installations"),(0,a.kt)("p",null,"Issue the regular loading command of your plugin manager, pointing it to ",(0,a.kt)("inlineCode",{parentName:"p"},"z-shell/zsh-startify"),". Then, add invocation of ",(0,a.kt)("inlineCode",{parentName:"p"},"zsh-startify")," to the end of ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.zshrc"),":"))}d.isMDXComponent=!0}}]);