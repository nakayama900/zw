"use strict";(self.webpackChunkzi_wiki_pages=self.webpackChunkzi_wiki_pages||[]).push([[3513],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return u}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),u=o,y=d["".concat(s,".").concat(u)]||d[u]||m[u]||i;return n?a.createElement(y,r(r({ref:t},p),{},{components:n})):a.createElement(y,r({ref:t},p))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var c=2;c<i;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},228:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var a=n(7462),o=n(3366),i=(n(7294),n(3905)),r=["components"],l={id:"zconvey",title:"\u2699\ufe0f ZConvey",image:"/img/z-shell_501x501.png",description:"Zsh Plugin ZConvey documentation",keywords:["zconvey","plugin","zsh","z-shell","zi"]},s=void 0,c={unversionedId:"ecosystem/plugins/zconvey",id:"ecosystem/plugins/zconvey",title:"\u2699\ufe0f ZConvey",description:"Zsh Plugin ZConvey documentation",source:"@site/docs/ecosystem/plugins/01_zconvey.md",sourceDirName:"ecosystem/plugins",slug:"/ecosystem/plugins/zconvey",permalink:"/docs/ecosystem/plugins/zconvey",editUrl:"https://github.com/z-shell/zw/tree/main/docs/ecosystem/plugins/01_zconvey.md",tags:[],version:"current",lastUpdatedBy:"Salvydas Lukosius",lastUpdatedAt:1642376565,formattedLastUpdatedAt:"1/16/2022",sidebarPosition:1,frontMatter:{id:"zconvey",title:"\u2699\ufe0f ZConvey",image:"/img/z-shell_501x501.png",description:"Zsh Plugin ZConvey documentation",keywords:["zconvey","plugin","zsh","z-shell","zi"]},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udce6 Quick overview",permalink:"/docs/ecosystem/packages"},next:{title:"\u2699\ufe0f Startify",permalink:"/docs/ecosystem/plugins/startify"}},p=[{value:"Zstyles for ZConvey",id:"zstyles-for-zconvey",children:[],level:2},{value:"ZConvey commands",id:"zconvey-commands",children:[],level:2},{value:"Install ZConvey with ZI",id:"install-zconvey-with-zi",children:[],level:2},{value:"Manual ZConvey installation",id:"manual-zconvey-installation",children:[],level:2}],m={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"ZConvey integrates multiple Zsh sessions. They are given an ID, optionally a NAME (both unique), and can send commands to each other. Use this to switch all your Zshells to given directory, via ",(0,i.kt)("inlineCode",{parentName:"p"},"zc-all cd $PWD"),"! Also, there's ",(0,i.kt)("inlineCode",{parentName:"p"},"zc-bg-notify")," ",(0,i.kt)("strong",{parentName:"p"},"script")," (not a function), that will show notification under prompt of every active Zsh session. You can call this script from any program, Bash or GUI."),(0,i.kt)("p",null,"Video \u2013\xa0view on ",(0,i.kt)("a",{parentName:"p",href:"https://asciinema.org/a/156726"},"asciinema"),". You can resize the video by pressing ",(0,i.kt)("inlineCode",{parentName:"p"},"Ctrl-+")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"Cmd-+"),"."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://asciinema.org/a/156726"},(0,i.kt)("img",{parentName:"a",src:"https://asciinema.org/a/156726.png",alt:"asciicast"}))),(0,i.kt)("h2",{id:"zstyles-for-zconvey"},(0,i.kt)("a",{parentName:"h2",href:"/search?q=zstyle"},"Zstyles")," for ZConvey"),(0,i.kt)("p",null,"The values being set are the defaults. They must be set before loading the plugin."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'zstyle ":plugin:zconvey" check_interval "2"         # How often to check if there are new commands (in seconds)\nzstyle ":plugin:zconvey" expire_seconds "22"        # If shell is busy for 22 seconds, the received command will expire and not run\nzstyle ":plugin:zconvey" greeting "logo"            # Display logo at Zsh start ("text" \u2013 display text, "none" \u2013 no greeting)\nzstyle ":plugin:zconvey" ask "0"                    # zc won\'t ask for missing data ("1" has the same effect as always using -a option)\nzstyle ":plugin:zconvey" ls_after_rename "0"        # Don\'t execute zc-ls after doing rename (with zc-rename or zc-take)\nzstyle ":plugin:zconvey" use_zsystem_flock "1"      # Should use faster zsystem\'s flock when it\'s possible?\n                                                    # (default true on Zsh >= 5.3, will revert to mixed zsystem/flock on older Zshells)\nzstyle ":plugin:zconvey" output_method "feeder"     # To put commands on command line, ZConvey can use small program "feeder". Or "zsh"\n                                                    # method, which currently doesn\'t automatically run the command \u2013\xa0to use when e.g.\n                                                    # feeder doesn\'t build (unlikely) or when occurring any problems with it\nzstyle ":plugin:zconvey" timestamp_from "datetime"  # Use zsh/datetime module for obtaining timestamp. "date" \u2013 use date command (fork)\n')),(0,i.kt)("h2",{id:"zconvey-commands"},"ZConvey commands"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Command"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"zc")),(0,i.kt)("td",{parentName:"tr",align:"left"},'Sends to other session; use "-a" option to be asked for target and a command to send')),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"zc-ls")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Lists all active and named sessions")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"zc-id")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Shows ID and NAME of current session")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"zc-all")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The same as ",(0,i.kt)("inlineCode",{parentName:"td"},"zc"),", but targets are all other active sessions (with ",(0,i.kt)("inlineCode",{parentName:"td"},"-f")," also busy sessions)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"zc-take")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Takes a name for current or selected sessions, schematically renames any conflicting sessions")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"zc-logo")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The same as ",(0,i.kt)("inlineCode",{parentName:"td"},"zc-id"),", but in a form of an on-screen logo; bound to Ctrl-O Ctrl-I")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"zc-rename")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Assigns name to current or selected session; won't rename if there's a session with the same name")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"zc-bg-notify")),(0,i.kt)("td",{parentName:"tr",align:"left"},"In subdirectory ",(0,i.kt)("inlineCode",{parentName:"td"},"cmds"),", link it to ",(0,i.kt)("inlineCode",{parentName:"td"},"/usr/local/bin"),", etc. or load with e.g. ZI")))),(0,i.kt)("p",null,"The main command is ",(0,i.kt)("inlineCode",{parentName:"p"},"zc")," (yet it is rather rarely used, I'm always sending to all sessions with ",(0,i.kt)("inlineCode",{parentName:"p"},"zc-all"),"). It is used to execute commands on other sessions. ",(0,i.kt)("inlineCode",{parentName:"p"},"zc-ls")," is the main tool to obtain overall information on sessions. ",(0,i.kt)("inlineCode",{parentName:"p"},"zc-take")," is a nice rename tool to quickly name a few sessions. Keyboard shortcut Ctrl-O Ctrl-I will show current session's ID and NAME in form of an on-screen logo."),(0,i.kt)("h2",{id:"install-zconvey-with-zi"},"Install ZConvey with ZI"),(0,i.kt)("p",null,"Add ",(0,i.kt)("inlineCode",{parentName:"p"},"zi load z-shell/zconvey")," to your ",(0,i.kt)("inlineCode",{parentName:"p"},".zshrc")," file. ZI will clone the plugin the next time you start zsh. To update issue ",(0,i.kt)("inlineCode",{parentName:"p"},"zi update z-shell/zconvey"),"."),(0,i.kt)("p",null,"ZI can load in ",(0,i.kt)("a",{parentName:"p",href:"/search?q=turbo+and+lucid"},"turbo-mode"),", below is an example configuration."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'zi ice wait"0"\nzi light z-shell/zconvey\n')),(0,i.kt)("p",null,"Adding ",(0,i.kt)("inlineCode",{parentName:"p"},"zc-bg-notify")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"$PATH"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'zi ice wait"0" as"command" pick"cmds/zc-bg-notify" silent\nzi light z-shell/zconvey\n')),(0,i.kt)("h2",{id:"manual-zconvey-installation"},"Manual ZConvey installation"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},'The plugin is "standalone"'),", which means that only sourcing it is needed. So to install, unpack ",(0,i.kt)("inlineCode",{parentName:"p"},"zconvey")," somewhere and add"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"source {where-zconvey-is}/zconvey.plugin.zsh\n")),(0,i.kt)("p",null,"to ",(0,i.kt)("inlineCode",{parentName:"p"},"zshrc"),"."),(0,i.kt)("p",null,"If using a plugin manager, then ",(0,i.kt)("inlineCode",{parentName:"p"},"ZI")," is recommended, but you can use any other too, and also install with ",(0,i.kt)("inlineCode",{parentName:"p"},"Oh My Zsh")," (by copying directory to ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.oh-my-zsh/custom/plugins"),")."),(0,i.kt)("p",null,"The plugin integrates with my other plugin ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/z-shell/zsh-select"},"Zsh-Select"),". Install it with e.g. ZI to be able to use ",(0,i.kt)("inlineCode",{parentName:"p"},"-a")," option for ",(0,i.kt)("inlineCode",{parentName:"p"},"zc")," command."))}d.isMDXComponent=!0}}]);